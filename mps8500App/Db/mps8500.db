#
# Danfysik SYS-9100 power supply
#
# macros required:
#
#  HWUNIT              : dev asyn channel name
#  SYS, SUB, DEV, INST : FRIB name components
#  MIN                 : for DRVL
#  MAX                 : for DRVH
#

#------------------------------------------------------------------------------
# asyn record for HW unit
#------------------------------------------------------------------------------
record(asyn, "_$(SYS)_$(SUB):$(DEV)_$(INST):ps_asyn")
{
  field(DESC, "asyn record")
  field(PORT, "$(HWUNIT)")
}

#------------------------------------------------------------------------------
# local/remote status
#------------------------------------------------------------------------------

record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):RMT_RSTS")
{
  field(DESC, "Local/Remote state")
  field(DTYP, "stream")
  field(SCAN, ".5 second")
  field(INP,  "@SYS9100.proto getRemoteMode $(HWUNIT)")
  field(ONAM, "Remote")
  field(ZNAM, "Local")
}

#------------------------------------------------------------------------------
# local/remote command
#------------------------------------------------------------------------------

record(bo, "$(SYS)_$(SUB):$(DEV)_$(INST):RMT_CMD")
{
  field(DESC, "Local/Remote command")
  field(DTYP, "stream")
  field(SCAN, "Passive")
  field(OUT,  "@SYS9100.proto setRemoteMode $(HWUNIT)")
  field(ONAM, "Remote")
  field(ZNAM, "Local")
}

#------------------------------------------------------------------------------
# on status
# (filled in by status word transform record)
#------------------------------------------------------------------------------
record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):ON_RSTS")
{
  field(DESC, "On/Off status")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "On")
  field(ZNAM, "Off")
}

#------------------------------------------------------------------------------
# ready status
# (filled in by status word transform record)
#------------------------------------------------------------------------------
record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):RDY_RSTS")
{
  field(DESC, "Ready status")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "Ready")
  field(ZNAM, "NotReady")
}

#------------------------------------------------------------------------------
# interlock status
# (filled in by status word transform record)
#------------------------------------------------------------------------------
record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):ILK_RSTS")
{
  field(DESC, "Interlock status")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "Interlock")
  field(ZNAM, "Okay")
}

#------------------------------------------------------------------------------
# polarity status
# (filled in by status word transform record)
#------------------------------------------------------------------------------

record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):NPOL_RSTS")
{
  field(DESC, "Output voltage reading")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "Normal")
  field(ZNAM, "Reversed")
}

#------------------------------------------------------------------------------
# fan fault
# (filled in by status word transform record)
#------------------------------------------------------------------------------

record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):FLT_RSTS_FAN")
{
  field(DESC, "Fan fault")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "Fault")
  field(ZNAM, "Okay")
}

#------------------------------------------------------------------------------
# temperature fault
# (filled in by status word transform record)
#------------------------------------------------------------------------------

record(bi, "$(SYS)_$(SUB):$(DEV)_$(INST):FLT_RSTS_T")
{
  field(DESC, "Temperature fault")
  field(DTYP, "Soft Channel")
  field(SCAN, "Passive")
  field(ONAM, "Fault")
  field(ZNAM, "Okay")
}

#------------------------------------------------------------------------------
# status word
#------------------------------------------------------------------------------

record(longin, "_$(SYS)_$(SUB):$(DEV)_$(INST):statwd1")
{
  field(DESC, "raw status word 1")
  field(DTYP, "stream")
  field(SCAN, ".2 second")
  field(EGU,  "")
  field(INP,  "@SYS9100.proto getStatusWord1 $(HWUNIT)")
  field(ADEL, "1")
}

record(transform, "_$(SYS)_$(SUB):$(DEV)_$(INST):stat_trnf")
{
  field(DESC, "intermediate record")
  field(SCAN, "Passive")
  field(PREC, "3")

  field(CMTA, "Status input")
  field(INPA, "_$(SYS)_$(SUB):$(DEV)_$(INST):statwd1  CP MS")

  field(CMTB, "ON bit")
  field(CLCB, "(A & 8388608)?0:1")  # 0x800000 (bit  1)  1=off
  field(OUTB, "$(SYS)_$(SUB):$(DEV)_$(INST):ON_RSTS  PP MS")

  field(CMTC, "Summary interlock bit")
  field(CLCC, "(A & 16384)?1:0")    # 0x004000 (bit 10)  1=intlk
  field(OUTC, "$(SYS)_$(SUB):$(DEV)_$(INST):ILK_RSTS  PP MS")

  field(CMTD, "Polarity")
  field(CLCD, "(A & 4194304)?1:0")  # 0x400000 (bit  2)  1=normal
  field(OUTD, "$(SYS)_$(SUB):$(DEV)_$(INST):NPOL_RSTS  PP MS")

  field(CMTE, "Fan fault")
  field(CLCE, "(A & 64)?1:0")       # 0x000040 (bit 18)  1=fault
  field(OUTE, "$(SYS)_$(SUB):$(DEV)_$(INST):FLT_RSTS_FAN  PP MS")

  field(CMTF, "Temp fault")
  field(CLCF, "(A & 32)?1:0")       # 0x000020 (bit 19)  1=fault
  field(OUTF, "$(SYS)_$(SUB):$(DEV)_$(INST):FLT_RSTS_T  PP MS")

  field(CMTG, "Ready")
  field(CLCG, "(A & 2)?0:1")        # 0x000002 (bit 23)  1=not ready
  field(OUTG, "$(SYS)_$(SUB):$(DEV)_$(INST):RDY_RSTS  PP MS")
}

#------------------------------------------------------------------------------
# temperature
#------------------------------------------------------------------------------

record(longin, "$(SYS)_$(SUB):$(DEV)_$(INST):T_RD")
{
  field(DESC, "Temperature")
  field(DTYP, "stream")
  field(SCAN, "2 second")
  field(EGU,  "degC")
  field(INP,  "@SYS9100.proto getAD(1) $(HWUNIT)")
  field(ADEL, "1")
}

#------------------------------------------------------------------------------
# current reading
#------------------------------------------------------------------------------

record(longin, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_rd_raw")
{
  field(DESC, "Output current reading")
  field(DTYP, "stream")
  field(SCAN, ".2 second")
  field(EGU,  "1/100")
  field(INP,  "@SYS9100.proto getAD(8) $(HWUNIT)")
  field(ADEL, "1")
  field(FLNK, "$(SYS)_$(SUB):$(DEV)_$(INST):I_RD_UNSC  PP NMS")
}

record(calc, "$(SYS)_$(SUB):$(DEV)_$(INST):I_RD")
{
  field(DESC, "Output current reading")
  field(SCAN, "Passive")
  field(PREC, "3")
  field(EGU,  "A")
  field(CALC, "A/100")
  field(INPA, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_rd_raw  NPP MS")
  field(ADEL, "0.1")
}

#------------------------------------------------------------------------------
# voltage reading
#------------------------------------------------------------------------------

record(longin, "_$(SYS)_$(SUB):$(DEV)_$(INST):v_rd_raw")
{
  field(DESC, "Output voltage reading raw")
  field(DTYP, "stream")
  field(SCAN, ".2 second")
  field(EGU,  "")
  field(INP,  "@SYS9100.proto getAD(12) $(HWUNIT)")
  field(ADEL, "1")
  field(FLNK, "$(SYS)_$(SUB):$(DEV)_$(INST):V_RD  PP NMS")
}

record(calc, "$(SYS)_$(SUB):$(DEV)_$(INST):V_RD")
{
  field(DESC, "Output voltage reading")
  field(SCAN, "Passive")
  field(PREC, "2")
  field(EGU,  "V")
  field(CALC, "A/10")
  field(INPA, "_$(SYS)_$(SUB):$(DEV)_$(INST):v_rd_raw  NPP MS")
  field(ADEL, "0.1")
}

#------------------------------------------------------------------------------
# current setting readback
#------------------------------------------------------------------------------

record(longin, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_rset_raw")
{
  field(DESC, "Current set readback, raw")
  field(DTYP, "stream")
  field(SCAN, ".2 second")
  field(EGU,  "")
  field(INP,  "@SYS9100.proto getDA(0) $(HWUNIT)")
  field(ADEL, "1")
}

record(calc, "$(SYS)_$(SUB):$(DEV)_$(INST):I_RSET")
{
  field(DESC, "Current set readback")
  field(SCAN, "Passive")
  field(EGU,  "A")
  field(PREC, "3")
  field(CALC, "A/1000.0")
  field(INPA, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_rset_raw  CP MS")
  field(ADEL, "0.01")
}

#------------------------------------------------------------------------------
# current setting
#------------------------------------------------------------------------------

record(ao, "$(SYS)_$(SUB):$(DEV)_$(INST):I_CSET")
{
  field(DESC, "Current setting")
  field(SCAN, "Passive")
  field(EGU,  "A")
  field(PREC, "3")
  field(DRVL, "$(MIN)")
  field(DRVH, "$(MAX)")
  field(ADEL, "0.01")
  field(FLNK, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_cset_raw")
}

record(calcout, "_$(SYS)_$(SUB):$(DEV)_$(INST):i_cset_raw")
{
  field(DESC, "Current setting, raw")
  field(DTYP, "stream")
  field(SCAN, "Passive")
  field(EGU,  "")
  field(PREC, "3")
  field(CALC, "A*1000")
  field(INPA, "$(SYS)_$(SUB):$(DEV)_$(INST):I_CSET_UNSC  NPP NMS")
  field(OUT,  "@SYS9100.proto setDA(0) $(HWUNIT)")
  field(OOPT, "Every Time")
  field(ADEL, "0.01")
}

#------------------------------------------------------------------------------
# device on command
#------------------------------------------------------------------------------

record(bo, "$(SYS)_$(SUB):$(DEV)_$(INST):ON_CMD")
{
  field(DESC, "Device on/off cmd")
  field(DTYP, "stream")
  field(SCAN, "Passive")
  field(OUT,  "@SYS9100.proto setOnOff $(HWUNIT)")
  field(ONAM, "On")
  field(ZNAM, "Off")
}

#------------------------------------------------------------------------------
# device reset command
#------------------------------------------------------------------------------

record(bo, "$(SYS)_$(SUB):$(DEV)_$(INST):RST_CMD")
{
  field(DESC, "Device reset cmd")
  field(DTYP, "stream")
  field(SCAN, "Passive")
  field(OUT,  "@SYS9100.proto reset $(HWUNIT)")
  field(ONAM, "Reset")
  field(ZNAM, "0")
}

#------------------------------------------------------------------------------
# test command/query interface
#------------------------------------------------------------------------------

record(stringout, "_$(SYS)_$(SUB):$(DEV)_$(INST):RAW_CMD")
{
  field(DESC, "raw command")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(OUT,  "@SYS9100.proto sendRawCommand $(HWUNIT)")
}

record(stringout, "_$(SYS)_$(SUB):$(DEV)_$(INST):RAW_QUERY")
{
  field(DESC, "raw query")
  field(SCAN, "Passive")
  field(DTYP, "stream")
  field(OUT, "@SYS9100.proto sendRawQuery(_$(SYS)_$(SUB):$(DEV)_$(INST):RAW_REPLY.VAL) $(HWUNIT)")
}

record(stringin, "_$(SYS)_$(SUB):$(DEV)_$(INST):RAW_REPLY")
{
  field(DESC, "raw query reply")
  field(SCAN, "Passive")
  field(DTYP, "Soft Channel")
}

#------------------------------------------------------------------------------
# END
#------------------------------------------------------------------------------


